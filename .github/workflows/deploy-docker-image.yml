name: Deploy to EC2

on:
  workflow_run:
    workflows: 
      - "CI/Publish"    # Dependencia del workflow de Build
    types:
      - completed
  workflow_dispatch:

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }} 
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Check EC2 Status
        env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          echo "Instance ID: ${{ vars.EC2_INSTANCE_ID }}"
          INSTANCE_STATE=$(aws ec2 describe-instances --instance-ids ${{ vars.EC2_INSTANCE_ID }} --query 'Reservations[*].Instances[*].State.Name' --output text --debug)
          if [ "$INSTANCE_STATE" != "running" ]; then
            echo "EC2 instance is not running. Exiting..."
            exit 1
          fi

      - name: Set up SSH Agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      
      - name: SSH into EC2 and Deploy to Kubernetes
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ vars.EC2_INSTANCE_PUBLIC_IP }} << 'EOF'
          # Copiar el manifiesto de despliegue al servidor EC2
          echo "${{ vars.DEPLOYMENT_MANIFEST }}" > /tmp/deployment.yaml
          echo "${{ vars.SERVICE_MANIFEST }}" > /tmp/service.yaml
          echo "${{ vars.CONFIG_MAP_PROMETHEUS }}" > /tmp/configmap.yaml
          echo "${{ vars.PROMETHEUS_MANIFEST }}" > /tmp/prometheus.yaml
          echo "${{ vars.GRAFANA_MANIFEST }}" > /tmp/grafana.yaml

          # Comprobar el acceso a kubectl
          kubectl config current-context || { echo "Error: kubectl no está configurado."; exit 1; }
      
          kubectl apply -f /tmp/deployment.yaml || { echo "Error: Falló el apply del deployment."; exit 1; }

          kubectl apply -f /tmp/configmap.yaml || { echo "Error: Falló el apply del Configmap."; exit 1; }          
          kubectl rollout status deployment/configmap || { echo "Error: El Configmap falló."; exit 1; }
          
          kubectl apply -f /tmp/prometheus.yaml || { echo "Error: Falló el apply de Prometheus."; exit 1; }
          kubectl rollout status deployment/prometheus || { echo "Error: El despliegue de Prometheus falló."; exit 1; }

          kubectl apply -f /tmp/prometheus.yaml || { echo "Error: Falló el apply de Prometheus."; exit 1; }
          kubectl rollout status deployment/prometheus || { echo "Error: El despliegue de Prometheus falló."; exit 1; }

          kubectl apply -f /tmp/grafana.yaml || { echo "Error: Falló el apply de grafana."; exit 1; }
          kubectl rollout status deployment/grafana || { echo "Error: El despliegue de grafana falló."; exit 1; }
          
          EOF

